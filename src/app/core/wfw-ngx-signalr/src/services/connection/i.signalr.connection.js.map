{"version":3,"file":"i.signalr.connection.js","sourceRoot":"","sources":["../../../../src/services/connection/i.signalr.connection.ts"],"names":[],"mappings":"","sourcesContent":["import { Observable } from \"rxjs/Observable\";\nimport { SignalRConfiguration } from \"../signalr.configuration\";\nimport { BroadcastEventListener } from \"../eventing/broadcast.event.listener\";\nimport { ConnectionStatus } from \"./connection.status\";\n\nexport interface ISignalRConnection {\n    readonly status: Observable<ConnectionStatus>;\n    readonly errors: Observable<any>;\n    readonly id: string;\n    invoke(method: string, ...parameters: any[]): Promise<any>;\n    listen<T>(listener: BroadcastEventListener<T>): void;\n    listenFor<T>(listener: string): BroadcastEventListener<T>;\n    stop(): void;\n    start(): Promise<any>;\n}\n"]}