{"version":3,"file":"signalr.connection.mock.manager.js","sourceRoot":"","sources":["../../../../src/services/testing/signalr.connection.mock.manager.ts"],"names":[],"mappings":";;;;AAAA,OAAO,EAAE,OAAO,EAAE,qBAAqB;AACvC,OAAO,EAAE,qBAAqB,EAAuB,kCAAkC;AAIvF,IAAA;IAMI;QACI,IAAI,CAAC,QAAQ,GAAG,IAAI,OAAO,EAAO,CAAC;QACnC,IAAI,CAAC,QAAQ,GAAG,IAAI,OAAO,EAAoB,CAAC;QAChD,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,OAAO,GAAG,IAAI,qBAAqB,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;KAC3F;IAED,sBAAI,8CAAI;;;;QAAR;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;SACvB;;;OAAA;IAED,sBAAI,iDAAO;;;;QAAX;YACI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;SACxB;;;OAAA;IAED,sBAAI,iDAAO;;;;QAAX;YACI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;SACxB;;;OAAA;IAED,sBAAI,mDAAS;;;;QAAb;YACI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;SAC1B;;;OAAA;uCAhCL;IAiCC,CAAA;AA5BD,wCA4BC","sourcesContent":["import { Subject } from 'rxjs/Subject';\nimport { SignalRConnectionMock, IListenerCollection } from './signalr.connection.mock';\nimport { ReplaySubject } from 'rxjs/ReplaySubject';\nimport { ConnectionStatus } from '../connection/connection.status';\n\nexport class SignalRConnectionMockManager {\n    private _status$: Subject<ConnectionStatus>;\n    private _errors$: Subject<any>;\n    private _object: SignalRConnectionMock;\n    public _listeners: IListenerCollection;\n\n    constructor() {\n        this._errors$ = new Subject<any>();\n        this._status$ = new Subject<ConnectionStatus>();\n        this._listeners = {};\n        this._object = new SignalRConnectionMock(this._errors$, this._status$, this._listeners);\n    }\n\n    get mock(): SignalRConnectionMock {\n        return this._object;\n    }\n\n    get errors$(): Subject<any> {\n        return this._errors$;\n    }\n\n    get status$(): Subject<ConnectionStatus> {\n        return this._status$;\n    }\n\n    get listeners(): IListenerCollection {\n        return this._listeners;\n    }\n}"]}